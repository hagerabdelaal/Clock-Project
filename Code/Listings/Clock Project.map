Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    lcd.o(.ARM.exidx.text.LCD_dataPortInit) refers to lcd.o(.text.LCD_dataPortInit) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.LCD_ctrlPortInit) refers to lcd.o(.text.LCD_ctrlPortInit) for [Anonymous Symbol]
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_dataPortInit) for LCD_dataPortInit
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_ctrlPortInit) for LCD_ctrlPortInit
    lcd.o(.text.LCD_init) refers to lcd.o(.text.LCD_instruction) for LCD_instruction
    lcd.o(.ARM.exidx.text.LCD_init) refers to lcd.o(.text.LCD_init) for [Anonymous Symbol]
    lcd.o(.text.LCD_instruction) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    lcd.o(.ARM.exidx.text.LCD_instruction) refers to lcd.o(.text.LCD_instruction) for [Anonymous Symbol]
    lcd.o(.text.LCD_secondLine) refers to lcd.o(.text.LCD_instruction) for LCD_instruction
    lcd.o(.ARM.exidx.text.LCD_secondLine) refers to lcd.o(.text.LCD_secondLine) for [Anonymous Symbol]
    lcd.o(.text.LCD_clearScreen) refers to lcd.o(.text.LCD_instruction) for LCD_instruction
    lcd.o(.ARM.exidx.text.LCD_clearScreen) refers to lcd.o(.text.LCD_clearScreen) for [Anonymous Symbol]
    lcd.o(.text.LCD_writeChar) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    lcd.o(.ARM.exidx.text.LCD_writeChar) refers to lcd.o(.text.LCD_writeChar) for [Anonymous Symbol]
    lcd.o(.text.LCD_writeWord) refers to lcd.o(.text.LCD_writeChar) for LCD_writeChar
    lcd.o(.ARM.exidx.text.LCD_writeWord) refers to lcd.o(.text.LCD_writeWord) for [Anonymous Symbol]
    main.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.main) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.main) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.main) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.main) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.main) refers to main.o(.bss.uart_semaphore) for uart_semaphore
    main.o(.text.main) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main) refers to main.o(.text.initTask) for initTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.timeTask) for timeTask
    main.o(.text.main) refers to main.o(.text.lcdTask) for lcdTask
    main.o(.text.main) refers to main.o(.text.uartTask) for uartTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.main) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.initTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.initTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.initTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.initTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.initTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.initTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.initTask) refers to uart.o(.text.UART0_init) for UART0_init
    main.o(.text.initTask) refers to lcd.o(.text.LCD_init) for LCD_init
    main.o(.text.initTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.initTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.initTask) refers to main.o(.text.initTask) for [Anonymous Symbol]
    main.o(.text.timeTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.timeTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.timeTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.timeTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.timeTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.timeTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.timeTask) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.timeTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.timeTask) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.timeTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.timeTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.timeTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.timeTask) refers to main.o(.text.timeTask) for [Anonymous Symbol]
    main.o(.text.lcdTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.lcdTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.lcdTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.lcdTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.lcdTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.lcdTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.lcdTask) refers to main.o(.bss.selection) for selection
    main.o(.text.lcdTask) refers to main.o(.rodata.cities) for cities
    main.o(.text.lcdTask) refers to main.o(.bss.xQueue1) for xQueue1
    main.o(.text.lcdTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.lcdTask) refers to lcd.o(.text.LCD_clearScreen) for LCD_clearScreen
    main.o(.text.lcdTask) refers to lcd.o(.text.LCD_writeWord) for LCD_writeWord
    main.o(.text.lcdTask) refers to noretval__2sprintf.o(.text) for __2sprintf
    main.o(.text.lcdTask) refers to lcd.o(.text.LCD_secondLine) for LCD_secondLine
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.lcdTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.lcdTask) refers to main.o(.text.lcdTask) for [Anonymous Symbol]
    main.o(.text.uartTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.uartTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.uartTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.uartTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.uartTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.uartTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.uartTask) refers to uart.o(.text.UART0_writeText) for UART0_writeText
    main.o(.text.uartTask) refers to main.o(.rodata.str1.1) for .L.str.18
    main.o(.text.uartTask) refers to main.o(.text.readTime) for readTime
    main.o(.text.uartTask) refers to inpututil.o(.text.getHour) for getHour
    main.o(.text.uartTask) refers to inpututil.o(.text.getSecMin) for getSecMin
    main.o(.text.uartTask) refers to main.o(.bss.xQueue2) for xQueue2
    main.o(.text.uartTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.uartTask) refers to main.o(.bss.uart_semaphore) for uart_semaphore
    main.o(.text.uartTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.uartTask) refers to main.o(.rodata.cities) for cities
    main.o(.text.uartTask) refers to main.o(.bss.selection) for selection
    main.o(.text.uartTask) refers to noretval__2sprintf.o(.text) for __2sprintf
    main.o(.text.uartTask) refers to uart.o(.text.UART0_read) for UART0_read
    main.o(.text.uartTask) refers to inpututil.o(.text.checkRange) for checkRange
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.uartTask) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.uartTask) refers to main.o(.text.uartTask) for [Anonymous Symbol]
    main.o(.text.readTime) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.readTime) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.readTime) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.readTime) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.readTime) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.readTime) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.readTime) refers to uart.o(.text.UART0_read) for UART0_read
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.readTime) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.readTime) refers to main.o(.text.readTime) for [Anonymous Symbol]
    main.o(.text.UART0_Handler) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.text.UART0_Handler) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.text.UART0_Handler) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.text.UART0_Handler) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.text.UART0_Handler) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.text.UART0_Handler) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.text.UART0_Handler) refers to main.o(.bss.uart_semaphore) for uart_semaphore
    main.o(.text.UART0_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.UART0_Handler) refers to uart.o(.text.UART0_clearInt) for UART0_clearInt
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.exidx.text.UART0_Handler) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.exidx.text.UART0_Handler) refers to main.o(.text.UART0_Handler) for [Anonymous Symbol]
    main.o(.bss.xQueue1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xQueue1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xQueue1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xQueue1) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.bss.xQueue1) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.bss.xQueue1) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.bss.xQueue2) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.xQueue2) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.xQueue2) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.xQueue2) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.bss.xQueue2) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.bss.xQueue2) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.bss.uart_semaphore) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.uart_semaphore) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.uart_semaphore) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.uart_semaphore) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.bss.uart_semaphore) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.bss.uart_semaphore) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.bss.selection) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.bss.selection) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.bss.selection) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.bss.selection) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.bss.selection) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.bss.selection) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.rodata.cities) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.rodata.cities) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.rodata.cities) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.rodata.cities) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.rodata.cities) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.rodata.cities) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.rodata.cities) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.str1.1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.rodata.str1.1) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.rodata.str1.1) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.rodata.str1.1) refers (Special) to _printf_str.o(.text) for _printf_str
    main.o(.ARM.use_no_argv) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(.ARM.use_no_argv) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    main.o(.ARM.use_no_argv) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(.ARM.use_no_argv) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    main.o(.ARM.use_no_argv) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(.ARM.use_no_argv) refers (Special) to _printf_str.o(.text) for _printf_str
    uart.o(.ARM.exidx.text.UART0_init) refers to uart.o(.text.UART0_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART0_clearInt) refers to uart.o(.text.UART0_clearInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART0_read) refers to uart.o(.text.UART0_read) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART0_writeText) refers to uart.o(.text.UART0_writeText) for [Anonymous Symbol]
    inpututil.o(.ARM.exidx.text.checkRange) refers to inpututil.o(.text.checkRange) for [Anonymous Symbol]
    inpututil.o(.text.getSecMin) refers to inpututil.o(.text.checkRange) for checkRange
    inpututil.o(.ARM.exidx.text.getSecMin) refers to inpututil.o(.text.getSecMin) for [Anonymous Symbol]
    inpututil.o(.text.getHour) refers to inpututil.o(.text.checkRange) for checkRange
    inpututil.o(.ARM.exidx.text.getHour) refers to inpututil.o(.text.getHour) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to clib_arm.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.4) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for vTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerNew) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.UART0_Handler) for UART0_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.text.getOscClk) refers to system_tm4c123.o(.rodata..Lswitch.table.getOscClk) for .Lswitch.table.getOscClk
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_flags_wp.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_dataPortInit), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_ctrlPortInit), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_instruction), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_secondLine), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_clearScreen), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_writeChar), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_writeWord), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.initTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.timeTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.lcdTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.uartTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.readTime), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Handler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_clearInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_read), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_writeText), (8 bytes).
    Removing inpututil.o(.text), (0 bytes).
    Removing inpututil.o(.ARM.exidx.text.checkRange), (8 bytes).
    Removing inpututil.o(.ARM.exidx.text.getSecMin), (8 bytes).
    Removing inpututil.o(.ARM.exidx.text.getHour), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (68 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (74 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (224 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (2 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (44 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (74 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (216 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (198 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (20 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (140 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (228 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (194 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (150 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (310 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (178 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (246 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.4), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (68 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (132 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (56 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.getOscClk), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (146 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (114 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (176 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (288 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (130 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.vTaskDelayUntil), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (122 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (214 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (66 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

482 unused section(s) (total 14078 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    inputUtil.c                              0x00000000   Number         0  inpututil.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002a8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002c4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x000002e0   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x000002e0   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000014  0x000002e6   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x000002ec   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x000002f0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002f2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000002f6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000002f6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000002f8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000002fa   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000002fa   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000002fc   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000002fc   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000002fc   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x00000302   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0000030a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000030e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000030e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000316   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000318   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000318   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000031c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x00000324   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000324   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000438   Section        0  noretval__2sprintf.o(.text)
    .text                                    0x00000460   Section        0  _printf_pad.o(.text)
    .text                                    0x000004ae   Section        0  _printf_str.o(.text)
    .text                                    0x00000500   Section        0  _printf_dec.o(.text)
    .text                                    0x00000578   Section        0  __printf_flags_wp.o(.text)
    .text                                    0x000006b0   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0000073a   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0000074a   Section        0  heapauxi.o(.text)
    .text                                    0x00000750   Section        0  _printf_intcommon.o(.text)
    _printf_input_char                       0x00000805   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x00000804   Section        0  _printf_char_common.o(.text)
    .text                                    0x00000834   Section        0  _sputc.o(.text)
    .text                                    0x0000083e   Section        0  _printf_char.o(.text)
    .text                                    0x0000086a   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000008ce   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0000091c   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000966   Section        0  exit.o(.text)
    .text                                    0x00000978   Section        8  libspace.o(.text)
    .text                                    0x00000980   Section        0  sys_exit.o(.text)
    .text                                    0x0000098c   Section        2  use_no_semi.o(.text)
    .text                                    0x0000098e   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000990   Section        0  lcd.o(.text.LCD_clearScreen)
    [Anonymous Symbol]                       0x0000099c   Section        0  lcd.o(.text.LCD_ctrlPortInit)
    [Anonymous Symbol]                       0x000009c4   Section        0  lcd.o(.text.LCD_dataPortInit)
    [Anonymous Symbol]                       0x000009ec   Section        0  lcd.o(.text.LCD_init)
    [Anonymous Symbol]                       0x00000a10   Section        0  lcd.o(.text.LCD_instruction)
    [Anonymous Symbol]                       0x00000a40   Section        0  lcd.o(.text.LCD_secondLine)
    [Anonymous Symbol]                       0x00000a4c   Section        0  lcd.o(.text.LCD_writeChar)
    [Anonymous Symbol]                       0x00000a80   Section        0  lcd.o(.text.LCD_writeWord)
    [Anonymous Symbol]                       0x00000aa0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000b00   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000b10   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000b30   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000b34   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000b50   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000bc0   Section        0  main.o(.text.UART0_Handler)
    [Anonymous Symbol]                       0x00000bfc   Section        0  uart.o(.text.UART0_clearInt)
    [Anonymous Symbol]                       0x00000c10   Section        0  uart.o(.text.UART0_init)
    [Anonymous Symbol]                       0x00000ca0   Section        0  uart.o(.text.UART0_read)
    [Anonymous Symbol]                       0x00000cb4   Section        0  uart.o(.text.UART0_writeText)
    __tagsym$$used.1                         0x00000cd8   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x00000cd8   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x00000cf4   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x00000cf4   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x00000d24   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x00000d24   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x00000d78   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00000d78   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x00000d94   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x00000d98   Section        0  inpututil.o(.text.checkRange)
    [Anonymous Symbol]                       0x00000db0   Section        0  inpututil.o(.text.getHour)
    [Anonymous Symbol]                       0x00000dd8   Section        0  inpututil.o(.text.getSecMin)
    initTask                                 0x00000e01   Thumb Code    18  main.o(.text.initTask)
    [Anonymous Symbol]                       0x00000e00   Section        0  main.o(.text.initTask)
    lcdTask                                  0x00000e15   Thumb Code   140  main.o(.text.lcdTask)
    [Anonymous Symbol]                       0x00000e14   Section        0  main.o(.text.lcdTask)
    timediff                                 0x00000ea0   Number         0  main.o(.text.lcdTask)
    [Anonymous Symbol]                       0x00000ebc   Section        0  main.o(.text.main)
    os_kernel_is_active                      0x00000fb5   Thumb Code    36  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x00000fb4   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x00000fd9   Thumb Code   128  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000fd8   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001059   Thumb Code   172  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001058   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001105   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001104   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001171   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001170   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x000011c1   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x000011c0   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x000011e9   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000011e8   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001265   Thumb Code    32  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001264   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x00001285   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x00001284   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00001299   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001298   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x000012b9   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000012b8   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x000012e5   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x000012e4   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x00001305   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001304   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001325   Thumb Code   152  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001324   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x000013bd   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000013bc   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x0000142d   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x0000142c   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x0000146d   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x0000146c   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001485   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001484   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x000014a1   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x000014a0   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x000014c9   Thumb Code    88  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x000014c8   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001521   Thumb Code   244  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001520   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001615   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001614   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x00001695   Thumb Code    40  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001694   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000016bd   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000016bc   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x000016e9   Thumb Code   120  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x000016e8   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001761   Thumb Code    34  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001760   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001785   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001784   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x0000179d   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0000179c   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001810   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x0000186c   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00001884   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x000018ac   Section        0  main.o(.text.readTime)
    timeTask                                 0x000018d5   Thumb Code   116  main.o(.text.timeTask)
    [Anonymous Symbol]                       0x000018d4   Section        0  main.o(.text.timeTask)
    uartTask                                 0x00001949   Thumb Code   264  main.o(.text.uartTask)
    [Anonymous Symbol]                       0x00001948   Section        0  main.o(.text.uartTask)
    [Anonymous Symbol]                       0x00001adc   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001b00   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x00001b1c   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x00001b38   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x00001b3c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001b54   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001b5c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00001b98   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x00001bb5   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001bb4   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001bc8   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00001be8   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001c04   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001c08   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001c3c   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x00001c4c   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00001c90   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00001cc4   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00001ce0   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00001cf0   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00001d10   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00001d38   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00001da4   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00001e30   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x00001ee0   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00001ef0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00001f94   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00001fe0   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x00002010   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00002028   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x0000204c   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002080   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x0000209c   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002108   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002240   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x000022b0   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00002320   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0000244c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000025b0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x0000260c   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002674   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x000026b4   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000026dc   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000026e8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002824   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00002880   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00002914   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00002990   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00002a8c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x00002af4   Section        0  timers.o(.text.xTimerGenericCommand)
    i._is_digit                              0x00002b4a   Section        0  __printf_wp.o(i._is_digit)
    $v0                                      0x00002b58   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00002b58   Section       26  fpinit.o(x$fpl$fpinit)
    maptable                                 0x00002b72   Data          17  __printf_flags_wp.o(.constdata)
    .constdata                               0x00002b72   Section       17  __printf_flags_wp.o(.constdata)
    cities                                   0x00002b84   Data          40  main.o(.rodata.cities)
    [Anonymous Symbol]                       0x00002b84   Section        0  main.o(.rodata.cities)
    .L.str.18                                0x00002bac   Data          27  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00002bac   Section        0  main.o(.rodata.str1.1)
    .L.str.22                                0x00002bc7   Data          36  main.o(.rodata.str1.1)
    .L.str.21                                0x00002beb   Data          14  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x20000068   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x20000068   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x200001f8   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x200001f8   Section        0  clib_arm.o(.bss.clib_mutex_id)
    os_kernel_is_active.os_kernel_active     0x2000020c   Data           1  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x2000020c   Section        0  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000020d   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000020d   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000260   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000260   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x200002b0   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200002b0   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x200002b4   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x200002b4   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxCurrentTimerList                       0x200002bc   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200002bc   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200002c0   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200002c0   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200002c4   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200002c4   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200002c8   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200002c8   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200002cc   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200002cc   Section        0  tasks.o(.bss.pxReadyTasksLists)
    selection                                0x2000072c   Data           4  main.o(.bss.selection)
    [Anonymous Symbol]                       0x2000072c   Section        0  main.o(.bss.selection)
    uart_semaphore                           0x20000730   Data           4  main.o(.bss.uart_semaphore)
    [Anonymous Symbol]                       0x20000730   Section        0  main.o(.bss.uart_semaphore)
    ucHeap                                   0x20000734   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000734   Section        0  heap_1.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002734   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002734   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002738   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002738   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000273c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000273c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002740   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002740   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002744   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002744   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002748   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002748   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002948   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002948   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x200029a4   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x200029a4   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002ae4   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002ae4   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002b40   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b40   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b54   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b54   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002b68   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b68   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b7c   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b7c   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x20002b90   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002b90   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextFreeByte                            0x20002b94   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20002b94   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x20002b98   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002b98   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002b9c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002b9c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20002ba0   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002ba0   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002ba4   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002ba4   Section        0  tasks.o(.bss.xPendingReadyList)
    xQueue1                                  0x20002bb8   Data           4  main.o(.bss.xQueue1)
    [Anonymous Symbol]                       0x20002bb8   Section        0  main.o(.bss.xQueue1)
    xQueue2                                  0x20002bbc   Data           4  main.o(.bss.xQueue2)
    [Anonymous Symbol]                       0x20002bbc   Section        0  main.o(.bss.xQueue2)
    xSchedulerRunning                        0x20002bc0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002bc0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002bc4   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002bc4   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002bd8   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002bd8   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002bec   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002bec   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002bf0   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002bf0   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002bf4   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002bf4   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002bf8   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002bf8   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c00   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002c00   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002c00   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002c00   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002e00   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002a9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002c5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_d                                0x000002e1   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent                          0x000002e1   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_s                                0x000002e7   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x000002ed   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x000002f1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002f3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000002f7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x000002f9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000002fb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000002fd   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000002fd   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000002fd   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x00000303   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0000030b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000317   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000319   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000319   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000031d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x00000325   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000419   Thumb Code     0  startup_tm4c123.o(.text)
    __2sprintf                               0x00000439   Thumb Code    34  noretval__2sprintf.o(.text)
    _printf_pre_padding                      0x00000461   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x0000048d   Thumb Code    34  _printf_pad.o(.text)
    _printf_str                              0x000004af   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x00000501   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x00000579   Thumb Code   308  __printf_flags_wp.o(.text)
    __aeabi_memcpy                           0x000006b1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000006b1   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x00000717   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0000073b   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0000073b   Thumb Code     0  aeabi_memset4.o(.text)
    __use_two_region_memory                  0x0000074b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000074d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000074f   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x00000751   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_char_common                      0x0000080f   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x00000835   Thumb Code    10  _sputc.o(.text)
    _printf_cs_common                        0x0000083f   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x00000853   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x00000863   Thumb Code     8  _printf_char.o(.text)
    __aeabi_memcpy4                          0x0000086b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000086b   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000086b   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000008b3   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x000008cf   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000008cf   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000008cf   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000008d3   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x0000091d   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000967   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000979   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000979   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000981   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x0000098d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0000098d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0000098f   Thumb Code     0  indicate_semi.o(.text)
    LCD_clearScreen                          0x00000991   Thumb Code    10  lcd.o(.text.LCD_clearScreen)
    LCD_ctrlPortInit                         0x0000099d   Thumb Code    38  lcd.o(.text.LCD_ctrlPortInit)
    LCD_dataPortInit                         0x000009c5   Thumb Code    38  lcd.o(.text.LCD_dataPortInit)
    LCD_init                                 0x000009ed   Thumb Code    36  lcd.o(.text.LCD_init)
    LCD_instruction                          0x00000a11   Thumb Code    48  lcd.o(.text.LCD_instruction)
    LCD_secondLine                           0x00000a41   Thumb Code    10  lcd.o(.text.LCD_secondLine)
    LCD_writeChar                            0x00000a4d   Thumb Code    50  lcd.o(.text.LCD_writeChar)
    LCD_writeWord                            0x00000a81   Thumb Code    28  lcd.o(.text.LCD_writeWord)
    PendSV_Handler                           0x00000aa1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000b11   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000b35   Thumb Code    26  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x00000b51   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    UART0_Handler                            0x00000bc1   Thumb Code    58  main.o(.text.UART0_Handler)
    UART0_clearInt                           0x00000bfd   Thumb Code    18  uart.o(.text.UART0_clearInt)
    UART0_init                               0x00000c11   Thumb Code   144  uart.o(.text.UART0_init)
    UART0_read                               0x00000ca1   Thumb Code    20  uart.o(.text.UART0_read)
    UART0_writeText                          0x00000cb5   Thumb Code    34  uart.o(.text.UART0_writeText)
    _mutex_acquire                           0x00000cd9   Thumb Code    26  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x00000cf5   Thumb Code    48  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x00000d25   Thumb Code    82  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x00000d79   Thumb Code    28  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x00000d95   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    checkRange                               0x00000d99   Thumb Code    24  inpututil.o(.text.checkRange)
    getHour                                  0x00000db1   Thumb Code    38  inpututil.o(.text.getHour)
    getSecMin                                0x00000dd9   Thumb Code    38  inpututil.o(.text.getSecMin)
    main                                     0x00000ebd   Thumb Code   192  main.o(.text.main)
    pvPortMalloc                             0x00001811   Thumb Code    90  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x0000186d   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00001885   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    readTime                                 0x000018ad   Thumb Code    40  main.o(.text.readTime)
    uxListRemove                             0x00001add   Thumb Code    36  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x00001b01   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x00001b1d   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x00001b39   Thumb Code     2  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x00001b3d   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001b55   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001b5d   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x00001b99   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00001bc9   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00001be9   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001c05   Thumb Code     2  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001c09   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x00001c3d   Thumb Code    16  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x00001c4d   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00001c91   Thumb Code    52  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00001cc5   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001ce1   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001cf1   Thumb Code    30  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00001d11   Thumb Code    40  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00001d39   Thumb Code   108  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00001da5   Thumb Code   132  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x00001e31   Thumb Code   174  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x00001ee1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001ef1   Thumb Code   164  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00001f95   Thumb Code    74  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x00001fe1   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x00002011   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x00002029   Thumb Code    34  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x0000204d   Thumb Code    50  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x00002081   Thumb Code    28  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x0000209d   Thumb Code   106  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002109   Thumb Code   310  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00002241   Thumb Code   112  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x000022b1   Thumb Code   110  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00002321   Thumb Code   300  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x0000244d   Thumb Code   354  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000025b1   Thumb Code    92  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x0000260d   Thumb Code   102  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x00002675   Thumb Code    62  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x000026b5   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000026dd   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000026e9   Thumb Code   314  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002825   Thumb Code    92  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00002881   Thumb Code   146  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00002915   Thumb Code   122  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00002991   Thumb Code   252  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00002a8d   Thumb Code    96  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00002af5   Thumb Code    86  timers.o(.text.xTimerGenericCommand)
    _is_digit                                0x00002b4b   Thumb Code    14  __printf_wp.o(i._is_digit)
    _fp_init                                 0x00002b59   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00002b71   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00002b71   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00002c40   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002c60   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200002b8   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000325

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002c68, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002c60, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          317    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          798  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO          974    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000001a   Code   RO          976    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002c2   0x000002c2   0x00000002   PAD
    0x000002c4   0x000002c4   0x0000001c   Code   RO          978    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002e0   0x000002e0   0x00000000   Code   RO          791    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x000002e0   0x000002e0   0x00000006   Code   RO          790    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x000002e6   0x000002e6   0x00000006   Code   RO          789    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x000002ec   0x000002ec   0x00000004   Code   RO          809    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x000002f0   0x000002f0   0x00000002   Code   RO          838    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002f2   0x000002f2   0x00000004   Code   RO          844    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          847    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          850    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          852    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          854    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          857    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          859    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          861    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          863    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          865    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          867    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          869    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          871    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          873    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          875    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          877    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          881    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          883    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          885    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000000   Code   RO          887    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x000002f6   0x000002f6   0x00000002   Code   RO          888    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x000002f8   0x000002f8   0x00000002   Code   RO          910    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          925    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          927    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          930    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          933    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          935    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000000   Code   RO          938    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x000002fa   0x000002fa   0x00000002   Code   RO          939    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          800    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x000002fc   0x000002fc   0x00000000   Code   RO          815    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x000002fc   0x000002fc   0x00000006   Code   RO          827    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000302   0x00000302   0x00000008   Code   RO          816    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0000030a   0x0000030a   0x00000004   Code   RO          818    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0000030e   0x0000030e   0x00000000   Code   RO          820    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0000030e   0x0000030e   0x00000008   Code   RO          821    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000002   Code   RO          842    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000318   0x00000318   0x00000000   Code   RO          890    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000318   0x00000318   0x00000004   Code   RO          891    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0000031c   0x0000031c   0x00000006   Code   RO          892    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x00000322   0x00000322   0x00000002   PAD
    0x00000324   0x00000324   0x00000114   Code   RO          318  * .text               startup_tm4c123.o
    0x00000438   0x00000438   0x00000028   Code   RO          759    .text               c_w.l(noretval__2sprintf.o)
    0x00000460   0x00000460   0x0000004e   Code   RO          763    .text               c_w.l(_printf_pad.o)
    0x000004ae   0x000004ae   0x00000052   Code   RO          765    .text               c_w.l(_printf_str.o)
    0x00000500   0x00000500   0x00000078   Code   RO          767    .text               c_w.l(_printf_dec.o)
    0x00000578   0x00000578   0x00000138   Code   RO          781    .text               c_w.l(__printf_flags_wp.o)
    0x000006b0   0x000006b0   0x0000008a   Code   RO          792    .text               c_w.l(rt_memcpy_v6.o)
    0x0000073a   0x0000073a   0x00000010   Code   RO          794    .text               c_w.l(aeabi_memset4.o)
    0x0000074a   0x0000074a   0x00000006   Code   RO          796    .text               c_w.l(heapauxi.o)
    0x00000750   0x00000750   0x000000b2   Code   RO          801    .text               c_w.l(_printf_intcommon.o)
    0x00000802   0x00000802   0x00000002   PAD
    0x00000804   0x00000804   0x00000030   Code   RO          803    .text               c_w.l(_printf_char_common.o)
    0x00000834   0x00000834   0x0000000a   Code   RO          805    .text               c_w.l(_sputc.o)
    0x0000083e   0x0000083e   0x0000002c   Code   RO          807    .text               c_w.l(_printf_char.o)
    0x0000086a   0x0000086a   0x00000064   Code   RO          810    .text               c_w.l(rt_memcpy_w.o)
    0x000008ce   0x000008ce   0x0000004e   Code   RO          812    .text               c_w.l(rt_memclr_w.o)
    0x0000091c   0x0000091c   0x0000004a   Code   RO          831    .text               c_w.l(sys_stackheap_outer.o)
    0x00000966   0x00000966   0x00000012   Code   RO          833    .text               c_w.l(exit.o)
    0x00000978   0x00000978   0x00000008   Code   RO          839    .text               c_w.l(libspace.o)
    0x00000980   0x00000980   0x0000000c   Code   RO          900    .text               c_w.l(sys_exit.o)
    0x0000098c   0x0000098c   0x00000002   Code   RO          915    .text               c_w.l(use_no_semi.o)
    0x0000098e   0x0000098e   0x00000000   Code   RO          917    .text               c_w.l(indicate_semi.o)
    0x0000098e   0x0000098e   0x00000002   PAD
    0x00000990   0x00000990   0x0000000a   Code   RO           12    .text.LCD_clearScreen  lcd.o
    0x0000099a   0x0000099a   0x00000002   PAD
    0x0000099c   0x0000099c   0x00000026   Code   RO            4    .text.LCD_ctrlPortInit  lcd.o
    0x000009c2   0x000009c2   0x00000002   PAD
    0x000009c4   0x000009c4   0x00000026   Code   RO            2    .text.LCD_dataPortInit  lcd.o
    0x000009ea   0x000009ea   0x00000002   PAD
    0x000009ec   0x000009ec   0x00000024   Code   RO            6    .text.LCD_init      lcd.o
    0x00000a10   0x00000a10   0x00000030   Code   RO            8    .text.LCD_instruction  lcd.o
    0x00000a40   0x00000a40   0x0000000a   Code   RO           10    .text.LCD_secondLine  lcd.o
    0x00000a4a   0x00000a4a   0x00000002   PAD
    0x00000a4c   0x00000a4c   0x00000032   Code   RO           14    .text.LCD_writeChar  lcd.o
    0x00000a7e   0x00000a7e   0x00000002   PAD
    0x00000a80   0x00000a80   0x0000001c   Code   RO           16    .text.LCD_writeWord  lcd.o
    0x00000a9c   0x00000a9c   0x00000004   PAD
    0x00000aa0   0x00000aa0   0x00000064   Code   RO          418    .text.PendSV_Handler  port.o
    0x00000b04   0x00000b04   0x0000000c   PAD
    0x00000b10   0x00000b10   0x00000024   Code   RO          402    .text.SVC_Handler   port.o
    0x00000b34   0x00000b34   0x0000001a   Code   RO          111    .text.SysTick_Handler  cmsis_os2.o
    0x00000b4e   0x00000b4e   0x00000002   PAD
    0x00000b50   0x00000b50   0x00000070   Code   RO          329    .text.SystemInit    system_tm4c123.o
    0x00000bc0   0x00000bc0   0x0000003a   Code   RO           38    .text.UART0_Handler  main.o
    0x00000bfa   0x00000bfa   0x00000002   PAD
    0x00000bfc   0x00000bfc   0x00000012   Code   RO           57    .text.UART0_clearInt  uart.o
    0x00000c0e   0x00000c0e   0x00000002   PAD
    0x00000c10   0x00000c10   0x00000090   Code   RO           55    .text.UART0_init    uart.o
    0x00000ca0   0x00000ca0   0x00000014   Code   RO           59    .text.UART0_read    uart.o
    0x00000cb4   0x00000cb4   0x00000022   Code   RO           61    .text.UART0_writeText  uart.o
    0x00000cd6   0x00000cd6   0x00000002   PAD
    0x00000cd8   0x00000cd8   0x0000001a   Code   RO           92    .text._mutex_acquire  clib_arm.o
    0x00000cf2   0x00000cf2   0x00000002   PAD
    0x00000cf4   0x00000cf4   0x00000030   Code   RO           96    .text._mutex_free   clib_arm.o
    0x00000d24   0x00000d24   0x00000052   Code   RO           90    .text._mutex_initialize  clib_arm.o
    0x00000d76   0x00000d76   0x00000002   PAD
    0x00000d78   0x00000d78   0x0000001c   Code   RO           94    .text._mutex_release  clib_arm.o
    0x00000d94   0x00000d94   0x00000002   Code   RO           84    .text._platform_post_stackheap_init  clib_arm.o
    0x00000d96   0x00000d96   0x00000002   PAD
    0x00000d98   0x00000d98   0x00000018   Code   RO           70    .text.checkRange    inpututil.o
    0x00000db0   0x00000db0   0x00000026   Code   RO           74    .text.getHour       inpututil.o
    0x00000dd6   0x00000dd6   0x00000002   PAD
    0x00000dd8   0x00000dd8   0x00000026   Code   RO           72    .text.getSecMin     inpututil.o
    0x00000dfe   0x00000dfe   0x00000002   PAD
    0x00000e00   0x00000e00   0x00000012   Code   RO           28    .text.initTask      main.o
    0x00000e12   0x00000e12   0x00000002   PAD
    0x00000e14   0x00000e14   0x000000a8   Code   RO           32    .text.lcdTask       main.o
    0x00000ebc   0x00000ebc   0x000000f8   Code   RO           26    .text.main          main.o
    0x00000fb4   0x00000fb4   0x00000024   Code   RO           88    .text.os_kernel_is_active  clib_arm.o
    0x00000fd8   0x00000fd8   0x00000080   Code   RO          550    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001058   0x00001058   0x000000ac   Code   RO          536    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001104   0x00001104   0x0000006a   Code   RO          687    .text.prvCheckForValidListAndQueue  timers.o
    0x0000116e   0x0000116e   0x00000002   PAD
    0x00001170   0x00001170   0x0000004e   Code   RO          654    .text.prvCheckTasksWaitingTermination  tasks.o
    0x000011be   0x000011be   0x00000002   PAD
    0x000011c0   0x000011c0   0x00000026   Code   RO          492    .text.prvCopyDataFromQueue  queue.o
    0x000011e6   0x000011e6   0x00000002   PAD
    0x000011e8   0x000011e8   0x0000007a   Code   RO          480    .text.prvCopyDataToQueue  queue.o
    0x00001262   0x00001262   0x00000002   PAD
    0x00001264   0x00001264   0x00000020   Code   RO          542    .text.prvDeleteTCB  tasks.o
    0x00001284   0x00001284   0x00000012   Code   RO          496    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00001296   0x00001296   0x00000002   PAD
    0x00001298   0x00001298   0x00000020   Code   RO          725    .text.prvGetNextExpireTime  timers.o
    0x000012b8   0x000012b8   0x0000002a   Code   RO          576    .text.prvIdleTask   tasks.o
    0x000012e2   0x000012e2   0x00000002   PAD
    0x000012e4   0x000012e4   0x00000020   Code   RO          460    .text.prvInitialiseMutex  queue.o
    0x00001304   0x00001304   0x00000020   Code   RO          454    .text.prvInitialiseNewQueue  queue.o
    0x00001324   0x00001324   0x00000098   Code   RO          534    .text.prvInitialiseNewTask  tasks.o
    0x000013bc   0x000013bc   0x00000070   Code   RO          652    .text.prvInitialiseTaskLists  tasks.o
    0x0000142c   0x0000142c   0x00000040   Code   RO          737    .text.prvInsertTimerInActiveList  timers.o
    0x0000146c   0x0000146c   0x00000018   Code   RO          494    .text.prvIsQueueEmpty  queue.o
    0x00001484   0x00001484   0x0000001c   Code   RO          482    .text.prvIsQueueFull  queue.o
    0x000014a0   0x000014a0   0x00000028   Code   RO          410    .text.prvPortStartFirstTask  port.o
    0x000014c8   0x000014c8   0x00000058   Code   RO          733    .text.prvProcessExpiredTimer  timers.o
    0x00001520   0x00001520   0x000000f4   Code   RO          729    .text.prvProcessReceivedCommands  timers.o
    0x00001614   0x00001614   0x00000080   Code   RO          727    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001694   0x00001694   0x00000028   Code   RO          544    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000016bc   0x000016bc   0x0000002a   Code   RO          731    .text.prvSampleTimeNow  timers.o
    0x000016e6   0x000016e6   0x00000002   PAD
    0x000016e8   0x000016e8   0x00000078   Code   RO          735    .text.prvSwitchTimerLists  timers.o
    0x00001760   0x00001760   0x00000022   Code   RO          400    .text.prvTaskExitError  port.o
    0x00001782   0x00001782   0x00000002   PAD
    0x00001784   0x00001784   0x00000016   Code   RO          689    .text.prvTimerTask  timers.o
    0x0000179a   0x0000179a   0x00000002   PAD
    0x0000179c   0x0000179c   0x00000072   Code   RO          484    .text.prvUnlockQueue  queue.o
    0x0000180e   0x0000180e   0x00000002   PAD
    0x00001810   0x00001810   0x0000005a   Code   RO          431    .text.pvPortMalloc  heap_1.o
    0x0000186a   0x0000186a   0x00000002   PAD
    0x0000186c   0x0000186c   0x00000018   Code   RO          636    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00001884   0x00001884   0x00000028   Code   RO          398    .text.pxPortInitialiseStack  port.o
    0x000018ac   0x000018ac   0x00000028   Code   RO           36    .text.readTime      main.o
    0x000018d4   0x000018d4   0x00000074   Code   RO           30    .text.timeTask      main.o
    0x00001948   0x00001948   0x00000194   Code   RO           34    .text.uartTask      main.o
    0x00001adc   0x00001adc   0x00000024   Code   RO          388    .text.uxListRemove  list.o
    0x00001b00   0x00001b00   0x0000001a   Code   RO          267    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x00001b1a   0x00001b1a   0x00000002   PAD
    0x00001b1c   0x00001b1c   0x0000001a   Code   RO          269    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x00001b36   0x00001b36   0x00000002   PAD
    0x00001b38   0x00001b38   0x00000002   Code   RO          265    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x00001b3a   0x00001b3a   0x00000002   PAD
    0x00001b3c   0x00001b3c   0x00000016   Code   RO          380    .text.vListInitialise  list.o
    0x00001b52   0x00001b52   0x00000002   PAD
    0x00001b54   0x00001b54   0x00000006   Code   RO          382    .text.vListInitialiseItem  list.o
    0x00001b5a   0x00001b5a   0x00000002   PAD
    0x00001b5c   0x00001b5c   0x0000003a   Code   RO          386    .text.vListInsert   list.o
    0x00001b96   0x00001b96   0x00000002   PAD
    0x00001b98   0x00001b98   0x0000001c   Code   RO          384    .text.vListInsertEnd  list.o
    0x00001bb4   0x00001bb4   0x00000014   Code   RO          408    .text.vPortEnableVFP  port.o
    0x00001bc8   0x00001bc8   0x00000020   Code   RO          414    .text.vPortEnterCritical  port.o
    0x00001be8   0x00001be8   0x0000001a   Code   RO          416    .text.vPortExitCritical  port.o
    0x00001c02   0x00001c02   0x00000002   PAD
    0x00001c04   0x00001c04   0x00000002   Code   RO          433    .text.vPortFree     heap_1.o
    0x00001c06   0x00001c06   0x00000002   PAD
    0x00001c08   0x00001c08   0x00000034   Code   RO          406    .text.vPortSetupTimerInterrupt  port.o
    0x00001c3c   0x00001c3c   0x00000010   Code   RO          510    .text.vQueueDelete  queue.o
    0x00001c4c   0x00001c4c   0x00000044   Code   RO          522    .text.vQueueWaitForMessageRestricted  queue.o
    0x00001c90   0x00001c90   0x00000034   Code   RO          554    .text.vTaskDelay    tasks.o
    0x00001cc4   0x00001cc4   0x0000001a   Code   RO          608    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00001cde   0x00001cde   0x00000002   PAD
    0x00001ce0   0x00001ce0   0x0000000e   Code   RO          612    .text.vTaskMissedYield  tasks.o
    0x00001cee   0x00001cee   0x00000002   PAD
    0x00001cf0   0x00001cf0   0x0000001e   Code   RO          596    .text.vTaskPlaceOnEventList  tasks.o
    0x00001d0e   0x00001d0e   0x00000002   PAD
    0x00001d10   0x00001d10   0x00000028   Code   RO          600    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00001d38   0x00001d38   0x0000006c   Code   RO          632    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00001da4   0x00001da4   0x0000008c   Code   RO          574    .text.vTaskStartScheduler  tasks.o
    0x00001e30   0x00001e30   0x000000ae   Code   RO          564    .text.vTaskSuspend  tasks.o
    0x00001ede   0x00001ede   0x00000002   PAD
    0x00001ee0   0x00001ee0   0x00000010   Code   RO          548    .text.vTaskSuspendAll  tasks.o
    0x00001ef0   0x00001ef0   0x000000a4   Code   RO          566    .text.vTaskSwitchContext  tasks.o
    0x00001f94   0x00001f94   0x0000004a   Code   RO          404    .text.xPortStartScheduler  port.o
    0x00001fde   0x00001fde   0x00000002   PAD
    0x00001fe0   0x00001fe0   0x0000002e   Code   RO          420    .text.xPortSysTickHandler  port.o
    0x0000200e   0x0000200e   0x00000002   PAD
    0x00002010   0x00002010   0x00000016   Code   RO          458    .text.xQueueCreateMutex  queue.o
    0x00002026   0x00002026   0x00000002   PAD
    0x00002028   0x00002028   0x00000022   Code   RO          462    .text.xQueueCreateMutexStatic  queue.o
    0x0000204a   0x0000204a   0x00000002   PAD
    0x0000204c   0x0000204c   0x00000032   Code   RO          456    .text.xQueueGenericCreate  queue.o
    0x0000207e   0x0000207e   0x00000002   PAD
    0x00002080   0x00002080   0x0000001c   Code   RO          452    .text.xQueueGenericCreateStatic  queue.o
    0x0000209c   0x0000209c   0x0000006a   Code   RO          450    .text.xQueueGenericReset  queue.o
    0x00002106   0x00002106   0x00000002   PAD
    0x00002108   0x00002108   0x00000136   Code   RO          470    .text.xQueueGenericSend  queue.o
    0x0000223e   0x0000223e   0x00000002   PAD
    0x00002240   0x00002240   0x00000070   Code   RO          486    .text.xQueueGenericSendFromISR  queue.o
    0x000022b0   0x000022b0   0x0000006e   Code   RO          488    .text.xQueueGiveFromISR  queue.o
    0x0000231e   0x0000231e   0x00000002   PAD
    0x00002320   0x00002320   0x0000012c   Code   RO          490    .text.xQueueReceive  queue.o
    0x0000244c   0x0000244c   0x00000162   Code   RO          474    .text.xQueueSemaphoreTake  queue.o
    0x000025ae   0x000025ae   0x00000002   PAD
    0x000025b0   0x000025b0   0x0000005c   Code   RO          610    .text.xTaskCheckForTimeOut  tasks.o
    0x0000260c   0x0000260c   0x00000066   Code   RO          538    .text.xTaskCreate   tasks.o
    0x00002672   0x00002672   0x00000002   PAD
    0x00002674   0x00002674   0x0000003e   Code   RO          532    .text.xTaskCreateStatic  tasks.o
    0x000026b2   0x000026b2   0x00000002   PAD
    0x000026b4   0x000026b4   0x00000026   Code   RO          626    .text.xTaskGetSchedulerState  tasks.o
    0x000026da   0x000026da   0x00000002   PAD
    0x000026dc   0x000026dc   0x0000000c   Code   RO          582    .text.xTaskGetTickCount  tasks.o
    0x000026e8   0x000026e8   0x0000013a   Code   RO          580    .text.xTaskIncrementTick  tasks.o
    0x00002822   0x00002822   0x00000002   PAD
    0x00002824   0x00002824   0x0000005c   Code   RO          630    .text.xTaskPriorityDisinherit  tasks.o
    0x00002880   0x00002880   0x00000092   Code   RO          628    .text.xTaskPriorityInherit  tasks.o
    0x00002912   0x00002912   0x00000002   PAD
    0x00002914   0x00002914   0x0000007a   Code   RO          602    .text.xTaskRemoveFromEventList  tasks.o
    0x0000298e   0x0000298e   0x00000002   PAD
    0x00002990   0x00002990   0x000000fc   Code   RO          552    .text.xTaskResumeAll  tasks.o
    0x00002a8c   0x00002a8c   0x00000068   Code   RO          685    .text.xTimerCreateTimerTask  timers.o
    0x00002af4   0x00002af4   0x00000056   Code   RO          697    .text.xTimerGenericCommand  timers.o
    0x00002b4a   0x00002b4a   0x0000000e   Code   RO          779    i._is_digit         c_w.l(__printf_wp.o)
    0x00002b58   0x00002b58   0x0000001a   Code   RO          898    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00002b72   0x00002b72   0x00000011   Data   RO          782    .constdata          c_w.l(__printf_flags_wp.o)
    0x00002b83   0x00002b83   0x00000001   PAD
    0x00002b84   0x00002b84   0x00000028   Data   RO           44    .rodata.cities      main.o
    0x00002bac   0x00002bac   0x00000091   Data   RO           45    .rodata.str1.1      main.o
    0x00002c3d   0x00002c3d   0x00000003   PAD
    0x00002c40   0x00002c40   0x00000020   Data   RO          973    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00002c60, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00002c60   0x00000004   Data   RW          331    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x00002c64   0x00000004   Data   RW          422    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x00002c68, Size: 0x00002df8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000060   Zero   RW          840    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000190   Zero   RW          101    .bss.clib_mutex_cb  clib_arm.o
    0x200001f8        -       0x00000014   Zero   RW          100    .bss.clib_mutex_id  clib_arm.o
    0x2000020c        -       0x00000001   Zero   RW          102    .bss.os_kernel_is_active.os_kernel_active  clib_arm.o
    0x2000020d        -       0x00000050   Zero   RW          747    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x2000025d   0x00002c68   0x00000003   PAD
    0x20000260        -       0x00000050   Zero   RW          746    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x200002b0        -       0x00000004   Zero   RW          743    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200002b4        -       0x00000004   Zero   RW          439    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x200002b8        -       0x00000004   Zero   RW          656    .bss.pxCurrentTCB   tasks.o
    0x200002bc        -       0x00000004   Zero   RW          741    .bss.pxCurrentTimerList  timers.o
    0x200002c0        -       0x00000004   Zero   RW          663    .bss.pxDelayedTaskList  tasks.o
    0x200002c4        -       0x00000004   Zero   RW          664    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200002c8        -       0x00000004   Zero   RW          742    .bss.pxOverflowTimerList  timers.o
    0x200002cc        -       0x00000460   Zero   RW          666    .bss.pxReadyTasksLists  tasks.o
    0x2000072c        -       0x00000004   Zero   RW           43    .bss.selection      main.o
    0x20000730        -       0x00000004   Zero   RW           42    .bss.uart_semaphore  main.o
    0x20000734        -       0x00002000   Zero   RW          440    .bss.ucHeap         heap_1.o
    0x20002734        -       0x00000004   Zero   RW          660    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002738        -       0x00000004   Zero   RW          659    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000273c        -       0x00000004   Zero   RW          668    .bss.uxSchedulerSuspended  tasks.o
    0x20002740        -       0x00000004   Zero   RW          657    .bss.uxTaskNumber   tasks.o
    0x20002744        -       0x00000004   Zero   RW          667    .bss.uxTopReadyPriority  tasks.o
    0x20002748        -       0x00000200   Zero   RW          276    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002948        -       0x0000005c   Zero   RW          275    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x200029a4        -       0x00000140   Zero   RW          278    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002ae4        -       0x0000005c   Zero   RW          277    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002b40        -       0x00000014   Zero   RW          744    .bss.xActiveTimerList1  timers.o
    0x20002b54        -       0x00000014   Zero   RW          745    .bss.xActiveTimerList2  timers.o
    0x20002b68        -       0x00000014   Zero   RW          675    .bss.xDelayedTaskList1  tasks.o
    0x20002b7c        -       0x00000014   Zero   RW          676    .bss.xDelayedTaskList2  tasks.o
    0x20002b90        -       0x00000004   Zero   RW          670    .bss.xIdleTaskHandle  tasks.o
    0x20002b94        -       0x00000004   Zero   RW          441    .bss.xNextFreeByte  heap_1.o
    0x20002b98        -       0x00000004   Zero   RW          671    .bss.xNextTaskUnblockTime  tasks.o
    0x20002b9c        -       0x00000004   Zero   RW          674    .bss.xNumOfOverflows  tasks.o
    0x20002ba0        -       0x00000004   Zero   RW          673    .bss.xPendedTicks   tasks.o
    0x20002ba4        -       0x00000014   Zero   RW          669    .bss.xPendingReadyList  tasks.o
    0x20002bb8        -       0x00000004   Zero   RW           40    .bss.xQueue1        main.o
    0x20002bbc        -       0x00000004   Zero   RW           41    .bss.xQueue2        main.o
    0x20002bc0        -       0x00000004   Zero   RW          661    .bss.xSchedulerRunning  tasks.o
    0x20002bc4        -       0x00000014   Zero   RW          665    .bss.xSuspendedTaskList  tasks.o
    0x20002bd8        -       0x00000014   Zero   RW          658    .bss.xTasksWaitingTermination  tasks.o
    0x20002bec        -       0x00000004   Zero   RW          662    .bss.xTickCount     tasks.o
    0x20002bf0        -       0x00000004   Zero   RW          739    .bss.xTimerQueue    timers.o
    0x20002bf4        -       0x00000004   Zero   RW          740    .bss.xTimerTaskHandle  timers.o
    0x20002bf8        -       0x00000004   Zero   RW          672    .bss.xYieldPending  tasks.o
    0x20002bfc   0x00002c68   0x00000004   PAD
    0x20002c00        -       0x00000000   Zero   RW          316    HEAP                startup_tm4c123.o
    0x20002c00        -       0x00000200   Zero   RW          315    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       222          0          0          0        421       3492   clib_arm.o
        80          0          0          0       1016      46382   cmsis_os2.o
        92          0          0          0       8200       1486   heap_1.o
       100          0          0          0          0       1018   inpututil.o
       258          0          0          0          0       1562   lcd.o
       150          0          0          0          0       2348   list.o
      1052        224        185          0         16       3077   main.o
       500         16          0          4          0       2863   port.o
      1918          0          0          0          0      18134   queue.o
       276         24        620          0        512       5496   startup_tm4c123.o
       112          0          0          4          0       6537   system_tm4c123.o
      2776          8          0          0       1280      27088   tasks.o
      1036         18          0          0        220      13254   timers.o
       216          0          0          0          0        902   uart.o

    ----------------------------------------------------------------------
      8910        302        840          8      11672     133639   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       122         12          3          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
       312          4         17          0          0         92   __printf_flags_wp.o
        14          0          0          0          0         68   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
       178          0          0          0          0         88   _printf_intcommon.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        40          6          0          0          0         84   noretval__2sprintf.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      1592         48         18          0         96       1880   Library Totals
         8          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1558         48         17          0         96       1764   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      1592         48         18          0         96       1880   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     10502        350        858          8      11768     134443   Grand Totals
     10502        350        858          8      11768     134443   ELF Image Totals
     10502        350        858          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11360 (  11.09kB)
    Total RW  Size (RW Data + ZI Data)             11776 (  11.50kB)
    Total ROM Size (Code + RO Data + RW Data)      11368 (  11.10kB)

==============================================================================

